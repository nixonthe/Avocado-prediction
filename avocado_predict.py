# -*- coding: utf-8 -*-
"""avocado_predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wqDGRgnIOFV7aALKbkOmBuFl_qGuknDy

[Dataset](https://www.kaggle.com/neuromusic/avocado-prices)

Предскажем количество купленных авокадо на основании его цены.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

avo = pd.read_csv('avocado.csv')

avo.head()

"""Проверим датасет на тип данных и пропущенные значения."""

avo.info()

"""Создадим новый датасет, убрав ненужные колонки."""

df = avo[['AveragePrice', 'Total Volume', 'year', 'region']]
df.head()

"""Какие регионы США представлены в данных?"""

df["region"].unique()

"""Медианная цена на авокадо за указанный период."""

df.groupby('year').agg({'AveragePrice': 'median'})

"""Средняя цена на авокадо за указанный период."""

df.groupby('year').agg({'AveragePrice': 'mean'})

"""Найдём регион, где самые дорогие авокадо за несколько лет."""

df.groupby('region').agg({'AveragePrice': 'mean'}).sort_values(by='AveragePrice', ascending=False)

"""Проверим цену за несколько лет."""

df.boxplot(column='AveragePrice')

"""В целом цена не превышает 1.6 доллара. Но есть довольно много выбросов."""

df.boxplot(column='Total Volume')

"""В продажах авокадо ещё больше выбросов."""

plt.bar(df.AveragePrice, df['Total Volume'])
plt.show()

"""Стабильно высокий спрос от 0.4 до 1.3. С ростом цены покупают немного меньше. Серьезное падение спроса наблюдается от 2.1 доллара за штуку.

Анализ проведён. Приступим к предсказаднию количество проданных авокадо.
"""

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, max_error
from sklearn.metrics import mean_squared_log_error, median_absolute_error
from sklearn.preprocessing import MinMaxScaler

x = df['AveragePrice'].values
y = df['Total Volume'].values

# задам свой параметр разброса, так как модель даёт отрицательные предсказанные
# значения
f_range = (0.05, 1)

x = MinMaxScaler(f_range).fit_transform(x.reshape(-1, 1))
y = MinMaxScaler(f_range).fit_transform(y.reshape(-1, 1))

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2,
                                                    random_state=20)

model = LinearRegression()
model.fit(x_train, y_train)

model_pred = model.predict(x_test)

ms = mean_squared_error(y_test, model_pred)
r2 = r2_score(y_test, model_pred)
ma = mean_absolute_error(y_test, model_pred)
max_e = max_error(y_test, model_pred)
msqe = mean_squared_log_error(y_test, model_pred)
medae = median_absolute_error(y_test, model_pred)
print('MSE: {}\nMAE: {}\nMQLE: {}'.format(ms, ma, msqe))
print('Max_error: {}\nMedian_AE: {}'.format(max_e, medae))

"""Отличные показатели оценок. Данная модель довольно примитивна, но может быть использована для предсказания количество купленных авокадо. Для более точного предсказания требуется больше признаков."""